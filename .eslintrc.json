{
    "env": {
        "es6": true
    },
    "root": true,
    "plugins": [
        "@typescript-eslint"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
      ],
    "rules": {
        "semi": ["error", "always"],
        "@typescript-eslint/ban-ts-comment": [0],
        "padding-line-between-statements": [
            "error",         
            // After directives (like 'use-strict'), except between directives
            { "blankLine": "always", "prev": "directive", "next": "*" },
            { "blankLine": "any", "prev": "directive", "next": "directive" },
            // After imports, except between imports
            { "blankLine": "always", "prev": "import", "next": "*" },
            { "blankLine": "any", "prev": "import", "next": "import" },
            // Before and after every sequence of variable declarations
            { "blankLine": "always", "prev": "*", "next": ["const", "let", "var"] },
            { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
            { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] },
            // Before and after class declaration, if, while, switch, try
            { "blankLine": "always", "prev": "*", "next": ["class", "if", "while", "switch", "try"] },
            { "blankLine": "always", "prev": ["class", "if", "while", "switch", "try"], "next": "*" },
            // Before return statements
            { "blankLine": "always", "prev": "*", "next": "return" }
        ]
    },
    "ignorePatterns": [
        "tests/*",
        "dist/*"
    ]
}
